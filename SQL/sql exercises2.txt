-- 1. users(id, name), products(id, name, user_id) tables

    Select * from users Inner Join products ON users.id=products.user_id;  -- select all users with all their columns that own at least one product.

    Select p.name, u.name From Users u Right Join products p ON u.id=p.user_id -- the product which has no user should be selected too.

    Select u.name from users u where u.id=(Select user_id from products where name='iphone'); -- subquery


-- 2. customers(id, name), products(id, name), wish_products(user_id, product_id) tables

    Select u.id, u.name, p.name From users u Left Join wish_products wp ON u.id=wp.user_id Left Join products p ON wp.product_id=p.id; -- including user with no wish_product


SELECT EXTRACT (YEAR FROM date 'YYYY/MM/DD') AS YEAR 


SELF JOIN

    https://www.w3schools.com/sql/sql_join_self.asp

        SELECT A.CustomerName AS CustomerName1, B.CustomerName AS CustomerName2, A.City
        FROM Customers A, Customers B
        WHERE A.CustomerID <> B.CustomerID  --  not equal
        AND A.City = B.City 
        ORDER BY A.City;

OUTER JOIN

    https://www.w3schools.com/sql/sql_join_left.asp
    https://www.w3schools.com/sql/sql_join_right.asp

    LEFT OUTER JOIN -- table A, table B then A LEFT OUTER JOIN B means returning A with the matching records from table B. if no match on table A then the result is <NULL>
    
        SELECT Customers.CustomerName, Orders.OrderID
        FROM Customers
        LEFT JOIN Orders
        ON Customers.CustomerID=Orders.CustomerID
        ORDER BY Customers.CustomerName;

    RIGHT OUTER JOIN 

        vice versa


GROUP BY 

    https://www.w3schools.com/sql/sql_groupby.asp

    SELECT Shippers.ShipperName, COUNT(Orders.OrderID) AS NumberOfOrders FROM Orders  -- grouping orders with ShipperName. COUNT is an aggregate function
    LEFT JOIN Shippers ON Orders.ShipperID = Shippers.ShipperID
    GROUP BY ShipperName;
